@{
    ViewData["Title"] = "Home Page";
}    
            <!-- LINE CHART -->
            <div class="card card-info">
              <div class="card-header">
                <h3 class="card-title">Telemetry</h3>

                <div class="card-tools">
                  <button type="button" class="btn btn-tool" data-card-widget="collapse">
                    <i class="fas fa-minus"></i>
                  </button>
                  <button type="button" class="btn btn-tool" data-card-widget="remove">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
              </div>
              <div class="card-body">
                  <div class="row">
              <div class="col-md-6">
                <div class="form-group">
                  <label>Devices</label>
                  <select class="form-control select2bs4" style="width: 100%;">                   
                  </select>
                </div>               
              </div>             
              <!-- /.col -->
            </div>
            <!-- /.row -->
                <div class="chart">
                  <canvas id="lineChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                </div>
              </div>
              <!-- /.card-body -->
            </div>
            <!-- /.card -->

            <!-- Bootstrap 4 -->

<!-- Page specific script -->
@section Scripts {
    <script>
  $(function () {
    $('.select2bs4').select2({
        ajax: {
            url: '@Url.Action("GetAllDevices")',
            dataType: 'json',
            processResults: function (data) {                               
                return {                    
                    results: data
                };
            }
        }
    });

  $('.select2bs4').on("select2:selecting", function(e) {    
   var data1 = e.params.args.data;
   $.ajax({
        url: '@Url.Action("GetAllTelemetryForDevice")',
        type: 'POST',
        dataType: 'json',
        data: { deviceId: data1.text, unitType: data1.unitType},
        success: function(data) {
            //alert(data.labels);
            updateData(data);
        }
   });
  });

    /* ChartJS
     * -------
     * Here we will create a few charts using ChartJS
     */
    //Empty dataset - set colors etc.
    var chartData = {
      labels  : [],
      datasets: [
        {
          label               : '',
          backgroundColor     : 'rgba(60,141,188,0.9)',
          borderColor         : 'rgba(60,141,188,0.8)',          
          pointColor          : '#3b8bba',
          pointStrokeColor    : 'rgba(60,141,188,1)',
          pointHighlightFill  : '#fff',
          pointHighlightStroke: 'rgba(60,141,188,1)',
          data                : []
        },
      ]
    }

    var chartOptions = {
      maintainAspectRatio : false,
      responsive : true,
      legend: {
        display: true
      },
      scales: {
        xAxes: [{                    
          gridLines : {
            display : false,
          },
          scaleLabel: {
            display: true,
            labelString: 'Time'
         },
         type: 'time',
         time: {
            tooltipFormat: 'YYYY-MM-DD HH:mm:SS',
            unit: 'second',
            displayFormats: {
            millisecond: 'YYYY-MM-DD HH:mm:ss.SSS',
            second: 'YYYY-MM-DD HH:mm:SS',
            minute: 'YYYY-MM-DD HH:mm',
            hour: 'YYYY-MM-DD HH'
            },
        },
         distribution: 'series',         
        }],        
        yAxes: [{
          gridLines : {
            display : false,
          },
          scaleLabel: {
            display: true,
            labelString: 'Unit'
         },
        }]
      }
    }
        
    var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
    var lineChartOptions = $.extend(true, {}, chartOptions)
    var lineChartData = $.extend(true, {}, chartData)
    lineChartData.datasets[0].fill = false;
    //lineChartData.datasets[1].fill = false;
    lineChartOptions.datasetFill = false

    var lineChart = new Chart(lineChartCanvas, {
      type: 'line',
      data: lineChartData,
      options: lineChartOptions
    })

    function updateData(data) {
        lineChart.data.labels = data.labels;
        lineChart.data.datasets[0].data = data.data;
        lineChart.data.datasets[0].label = data.device;
        lineChart.options.scales.yAxes[0].scaleLabel.labelString = data.unitType;
        lineChart.update();
    }


    })
</script>
}              
